version: "3.7"


services:
  jenkins:
    build:
      context: ./jenkins
      args:
        DOCKER_GID: ${DOCKER_GID}
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
      - JENKINS_ADMIN_ID=${JENKINS_ADMIN_ID}
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - GITHUB_ACCESS_TOKEN=${GITHUB_ACCESS_TOKEN}
      - GITHUB_PRIVATE_KEY=${GITHUB_PRIVATE_KEY}
      - GITHUB_APP_ID=${GITHUB_APP_ID}
      - DOCKER_URI=${DOCKER_URI}
      - SSH_PRIVATE_FILE_PATH=${SSH_PRIVATE_FILE_PATH}
      - ADMIN_USERS=${ADMIN_USERS}
      - GITHUB_REPO_OWNER=${GITHUB_REPO_OWNER}
    ports:
      - 8080:8080
      - 50000:50000
    container_name: jenkins
    networks:
      - jenkins-net
    volumes:
      # Folders need to have 1000:1000 ownership or use volume
      - ./jenkins_home:/var/jenkins_home
      - ./jenkins_logs:/var/log/jenkins
      - /var/run/docker.sock:/var/run/docker.sock
      # just mounting to ease development
      - ./jenkins/config/casc.yaml:/usr/share/jenkins/ref/casc.yaml
  
  web:
    container_name: nginx

    build:
      context: ./web
    ports:
        - "80:80"
    networks:
      - jenkins-net

  vault-server:
    container_name: vault
    build:
      context: ./vault
    ports:
      - "8200:8200"
    environment:
      - VAULT_ADDR='http://0.0.0.0:8200'
      - HOME=/var/vault
      # - VAULT_DEV_ROOT_TOKEN_ID="vault-plaintext-root-token"
    cap_add:
      - IPC_LOCK

    entrypoint: vault server -config=/vault/config/vault.json

    volumes:
          - ./vault_data/file:/vault/file:rw
          # - ./vault/config:/vault/config:rw
    networks:
      - jenkins-net


networks:
  jenkins-net: