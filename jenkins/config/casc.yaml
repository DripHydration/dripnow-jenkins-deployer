credentials:
  system:
    domainCredentials:
    - credentials:
      ## MANDATORY
      # Need to setup Github OAuth: https://github.com/jenkinsci/github-oauth-plugin
      - string:
          description: "Github OAuth Token"
          id: "github-token"
          scope: GLOBAL
          secret: ${GITHUB_ACCESS_TOKEN}
      # Need to create a Github APP: https://github.com/jenkinsci/github-branch-source-plugin/blob/master/docs/github-app.adoc
      - gitHubApp:
            appID: ${GITHUB_APP_ID}
            description: "GitHub app"
            id: "github-app"
            # apiUri: https://my-custom-github-enterprise.com/api/v3 # optional only required for GitHub enterprise
            privateKey: "${readFile:${SSH_PRIVATE_FILE_PATH}}"
      - vaultAppRoleCredential:
          id: "vault-app-role"
          # these commited values are test values, replace with your own
          roleId: f4c04194-1ced-3c39-ae93-e1b2705036a5
          secretId: 5f735c64-c8c8-4508-4b7b-2a6b38fa82f9
          scope: GLOBAL


security:
  queueItemAuthenticator:
    authenticators:
      - global:
          ##TODO switch this to the running user and fix problem running docker
          strategy: triggeringUsersAuthorizationStrategy
          # strategy: systemAuthorizationStrategy


jenkins:
  numExecutors: 0

  mode: EXCLUSIVE

  systemMessage: |
    This Jenkins is 100% configured and managed 'as code'.
    Config is now mostly handled by the 'Jenkins Configuration as Code' (JCasC) plugin.

  securityRealm:
    github:
    ## MANDATORY
    # Need to create OAuth connector in GitHub
      githubWebUri: "https://github.com"
      githubApiUri: "https://api.github.com"
      clientID: ${GITHUB_CLIENT_ID}
      clientSecret: ${GITHUB_CLIENT_SECRET}
      oauthScopes: "read:org,user:email"

  remotingSecurity:
    enabled: true

  authorizationStrategy:
    # ALL params are required
    # https://stackoverflow.com/questions/60559456/configuring-jenkins-with-github-authorization
    github:
      # This is case sensitive
      adminUserNames: ${ADMIN_USERS}
      allowAnonymousJobStatusPermission: false
      allowAnonymousReadPermission: false
      allowCcTrayPermission: true
      allowGithubWebHookPermission: true
      authenticatedUserCreateJobPermission: true
      authenticatedUserReadPermission: true
      organizationNames: ""
      useRepositoryPermissions: true    

  clouds:
    - docker:
        name: "docker"
        dockerApi:
          dockerHost:
            uri: "unix:///var/run/docker.sock"
        templates:
          - labelString: "docker-agent"
            dockerTemplateBase:
              image: "jenkins/agent"
              # volumes:
              #   - first:/hello
              #   - second:/world
              # environmentsString: |
              #   hello=world
              #   foo=bar
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "10"
            retentionStrategy:
              idleMinutes: 1

  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true


jobs:
  - file: /tmp/DSL-jobs/seed.groovy


tool:
  dockerTool:
    installations:
    - name: "docker-latest"
      properties:
      - installSource:
          installers:
            - fromDocker:
                version: latest
  nodejs:
    installations:
    - name: "nodejs-17"
      properties:
      - installSource:
          installers:
            - nodeJSInstaller:
                id: "NodeJS 17.1.0"

  ansibleInstallation:
    installations:
    - name: "ansible-latest"
      properties:
      - installSource:
          installers:
          - command:
              command: "apt-get update && apt-get install -y ansible"
              toolHome: "/usr/bin/ansible"


unclassified:
  location:
    url: http://mordor:8080/jenkins

  githubpluginconfig:
    configs:
      - name: "GitHub"
        apiUrl: "https://api.github.com"
        credentialsId: "github-token"
        manageHooks: true
  
  ansiColorBuildWrapper:
    globalColorMapName: xterm

  hashicorpVault:
    configuration:
      ##TODO change to version 2
      engineVersion: 1  
      vaultCredentialId: "vault-app-role"
      vaultUrl: "http://mordor/"
      prefixPath: "kv/jenkins"
